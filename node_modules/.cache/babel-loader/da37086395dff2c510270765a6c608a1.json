{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport db from './firebase';\nimport Video from './Video';\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const scrollRef = useRef(null);\n  useEffect(() => {\n    db.collection('videos').onSnapshot(snapshot => setVideos(snapshot.docs.map(doc => doc.data())));\n    ReactDOM.findDOMNode(scrollRef.current).addEventListener('scroll', onScrollPauseVideo);\n  }, []);\n\n  const onVideoPress = videoRef => {\n    console.log('calling', videoRef.target.pause());\n\n    if (playing) {\n      videoRef.target.pause();\n      setPlaying(false);\n    } else {\n      videoRef.target.play();\n      setPlaying(true);\n    }\n  };\n\n  const onScrollPauseVideo = event => {\n    setPlaying(false);\n    onVideoPress();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__videos\",\n      ref: scrollRef,\n      onScroll: onScrollPauseVideo,\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(Video, {\n        url: video.url,\n        channel: video.channel,\n        description: video.description,\n        song: video.song,\n        likes: video.likes,\n        messages: video.messages,\n        shares: video.shares,\n        onVideoPress: onVideoPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4QFvS8RPCAUZI9KyP7kvl89xz2s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/App.js"],"names":["useEffect","useRef","useState","ReactDOM","db","Video","App","videos","setVideos","playing","setPlaying","scrollRef","collection","onSnapshot","snapshot","docs","map","doc","data","findDOMNode","current","addEventListener","onScrollPauseVideo","onVideoPress","videoRef","console","log","target","pause","play","event","video","url","channel","description","song","likes","messages","shares"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMS,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,EAAE,CAACQ,UAAH,CAAc,QAAd,EAAwBC,UAAxB,CAAmCC,QAAQ,IACzCN,SAAS,CAACM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAzB,CAAD,CADX;AAIAf,IAAAA,QAAQ,CAACgB,WAAT,CAAqBR,SAAS,CAACS,OAA/B,EAAwCC,gBAAxC,CAAyD,QAAzD,EAAmEC,kBAAnE;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,YAAY,GAAIC,QAAD,IAAc;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAQ,CAACG,MAAT,CAAgBC,KAAhB,EAAvB;;AACA,QAAInB,OAAJ,EAAa;AACXe,MAAAA,QAAQ,CAACG,MAAT,CAAgBC,KAAhB;AACAlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,MAGO;AACLc,MAAAA,QAAQ,CAACG,MAAT,CAAgBE,IAAhB;AACAnB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GATD;;AAWA,QAAMY,kBAAkB,GAAIQ,KAAD,IAAW;AACpCpB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,IAAAA,YAAY;AACb,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEZ,SAAlC;AAA6C,MAAA,QAAQ,EAAEW,kBAAvD;AAAA,gBACGf,MAAM,CAACS,GAAP,CACEe,KAAK,iBACJ,QAAC,KAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACC,GADb;AAEE,QAAA,OAAO,EAAED,KAAK,CAACE,OAFjB;AAGE,QAAA,WAAW,EAAEF,KAAK,CAACG,WAHrB;AAIE,QAAA,IAAI,EAAEH,KAAK,CAACI,IAJd;AAKE,QAAA,KAAK,EAAEJ,KAAK,CAACK,KALf;AAME,QAAA,QAAQ,EAAEL,KAAK,CAACM,QANlB;AAOE,QAAA,MAAM,EAAEN,KAAK,CAACO,MAPhB;AAQE,QAAA,YAAY,EAAEf;AARhB;AAAA;AAAA;AAAA;AAAA,cAFH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAjDQjB,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport db from './firebase';\nimport Video from './Video'\n\nfunction App() {\n  const [videos, setVideos] = useState([])\n  const [playing, setPlaying] = useState(false)\n  const scrollRef = useRef(null);\n\n  useEffect(() => {\n    db.collection('videos').onSnapshot(snapshot =>\n      setVideos(snapshot.docs.map(doc => doc.data()))\n    )\n\n    ReactDOM.findDOMNode(scrollRef.current).addEventListener('scroll', onScrollPauseVideo)\n  }, [])\n\n  const onVideoPress = (videoRef) => {\n    console.log('calling', videoRef.target.pause())\n    if (playing) {\n      videoRef.target.pause();\n      setPlaying(false)\n    } else {\n      videoRef.target.play();\n      setPlaying(true)\n    }\n  }\n\n  const onScrollPauseVideo = (event) => {\n    setPlaying(false)\n    onVideoPress()\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__videos\" ref={scrollRef} onScroll={onScrollPauseVideo}>\n        {videos.map(\n          (video => (\n            <Video\n              url={video.url}\n              channel={video.channel}\n              description={video.description}\n              song={video.song}\n              likes={video.likes}\n              messages={video.messages}\n              shares={video.shares}\n              onVideoPress={onVideoPress}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}