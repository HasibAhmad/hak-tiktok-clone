{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/Video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './Video.css';\nimport VideoFooter from './VideoFooter';\nimport VideoSidebar from './VideoSidebar'; // import VisSense from 'VisSense'\n\nimport ScrollTrigger from 'react-scroll-trigger';\n\nfunction Video({\n  url,\n  channel,\n  description,\n  song,\n  likes,\n  messages,\n  shares\n}) {\n  _s();\n\n  const [playing, setPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  const onVideoPress = () => {\n    if (playing) {\n      videoRef.current.pause();\n      setPlaying(false);\n    } else {\n      videoRef.current.play();\n      setPlaying(true);\n    }\n  }; // const onEnterViewport = () => {\n  //   // this.setState({\n  //   //   visible: true,\n  //   // });\n  //   console.log('hi')\n  // }\n  // const onExitViewport =() => {\n  //   // this.setState({\n  //   //   visible: false,\n  //   // });\n  //   console.log('hi')\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video__player\",\n      src: url,\n      loop: true,\n      onClick: onVideoPress,\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VideoFooter, {\n      channel: channel,\n      description: description,\n      song: song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      likes: likes,\n      messages: messages,\n      shares: shares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"+KbWBPCf0bUczd5+j2BtpYMF674=\");\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/Video.js"],"names":["React","useRef","useState","VideoFooter","VideoSidebar","ScrollTrigger","Video","url","channel","description","song","likes","messages","shares","playing","setPlaying","videoRef","onVideoPress","current","pause","play"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAGA,SAASC,KAAT,CAAe;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA,IAA7B;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA,QAA1C;AAAoDC,EAAAA;AAApD,CAAf,EAA6E;AAAA;;AAC3E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AACzB,QAAIH,OAAJ,EAAa;AACXE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,MAGO;AACLC,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GARD,CAJ2E,CAc3E;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BAEI;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,GAAG,EAAER,GAFP;AAGE,MAAA,IAAI,MAHN;AAIE,MAAA,OAAO,EAAEU,YAJX;AAKE,MAAA,GAAG,EAAED;AALP;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI,QAAC,WAAD;AACE,MAAA,OAAO,EAAER,OADX;AAEE,MAAA,WAAW,EAAEC,WAFf;AAGE,MAAA,IAAI,EAAEC;AAHR;AAAA;AAAA;AAAA;AAAA,YAZJ,eAkBI,QAAC,YAAD;AACE,MAAA,KAAK,EAAEC,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,MAAM,EAAEC;AAHV;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAtDQP,K;;KAAAA,K;AAwDT,eAAeA,KAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport './Video.css'\nimport VideoFooter from './VideoFooter';\nimport VideoSidebar from './VideoSidebar';\n// import VisSense from 'VisSense'\nimport ScrollTrigger from 'react-scroll-trigger';\n\n\nfunction Video({ url, channel, description, song, likes, messages, shares }) {\n  const [playing, setPlaying] = useState(false)\n  const videoRef = useRef(null);\n\n  const onVideoPress = () => {\n    if (playing) {\n      videoRef.current.pause();\n      setPlaying(false)\n    } else {\n      videoRef.current.play();\n      setPlaying(true)\n    }\n  }\n\n  // const onEnterViewport = () => {\n  //   // this.setState({\n  //   //   visible: true,\n  //   // });\n  //   console.log('hi')\n  // }\n \n  // const onExitViewport =() => {\n  //   // this.setState({\n  //   //   visible: false,\n  //   // });\n  //   console.log('hi')\n  // }\n\n  return (\n    <div className=\"video\">\n      {/* <ScrollTrigger onEnter={onEnterViewport} onExit={onExitViewport}> */}\n        <video\n          className=\"video__player\"\n          src={url}\n          loop\n          onClick={onVideoPress}\n          ref={videoRef}\n        >\n        </video>\n\n        {/* </ScrollTrigger> */}\n        <VideoFooter\n          channel={channel}\n          description={description}\n          song={song}\n        />\n\n        <VideoSidebar\n          likes={likes}\n          messages={messages}\n          shares={shares}\n        />\n    </div>\n  )\n}\n\nexport default Video\n"]},"metadata":{},"sourceType":"module"}