{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/VideoSidebar.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Slide, TextField, Tooltip, Zoom } from '@material-ui/core';\nimport { Favorite, FavoriteBorder, HighlightOff, Message, SendRounded, Share } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport './VideoSidebar.css';\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nfunction VideoSidebar({\n  likes,\n  messages,\n  shares,\n  videoId,\n  userUid,\n  userName\n}) {\n  _s();\n\n  const [liked, setLiked] = useState(false);\n  const [openMessages, setOpenMessages] = React.useState(false);\n  const [userMessage, setUserMessage] = React.useState('');\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      minWidth: \"900px\"\n    },\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: 'inline'\n    }\n  }));\n  const classes = useStyles();\n\n  const handleClickOpenMessages = () => {\n    setOpenMessages(true);\n  };\n\n  const handleCloseMessages = () => {\n    setOpenMessages(false);\n  };\n\n  const handleUserMessageChange = event => {\n    setUserMessage(event.target.value);\n  };\n\n  useEffect(() => {\n    db.collection(\"videos\").doc(videoId).collection(\"likes\").onSnapshot(snapshot => {\n      snapshot.docs.forEach(doc => {\n        let docUserId = doc.data().userid;\n\n        if (docUserId === userUid) {\n          setLiked(true);\n        } else {\n          setLiked(false);\n        }\n      });\n    });\n  }, [videoId, userUid]);\n\n  const onLikeVideo = () => {\n    db.collection(\"videos\").doc(videoId).collection(\"likes\").add({\n      \"userid\": userUid\n    }).then(() => {\n      setLiked(true);\n    });\n  };\n\n  const onDisLikeVideo = () => {\n    db.collection(\"videos\").doc(videoId).collection(\"likes\").where('userid', '==', userUid).get().then(docs => {\n      docs.forEach(doc => {\n        doc.ref.delete();\n      });\n    }).then(() => {\n      setLiked(false);\n    });\n  };\n\n  const addUserComment = () => {\n    db.collection(\"videos\").doc(videoId).collection(\"messages\").add({\n      'message': userMessage,\n      'username': userName\n    });\n  };\n\n  const clearUserMessage = () => {\n    setUserMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoSidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoSidebar__buttons\",\n      children: [liked ? /*#__PURE__*/_jsxDEV(Favorite, {\n        fontSize: \"large\",\n        onClick: onDisLikeVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n        fontSize: \"large\",\n        onClick: onLikeVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoSidebar__buttons\",\n      onClick: handleClickOpenMessages,\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: messages.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoSidebar__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Share, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: shares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openMessages,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleCloseMessages,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      className: \"videoSidebar__messagesDialogBox\",\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.root,\n          children: messages.map(({\n            username,\n            message\n          }) => /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: username.match(/\\b(\\w)/g).join('').toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: username,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, username + message, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        id: \"alert-dialog-slide-title\",\n        className: \"videoSidebar__userMessageBox\",\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          TransitionComponent: Zoom,\n          arrow: true,\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              disabled: userMessage.length > 0 ? false : true,\n              onClick: clearUserMessage,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(HighlightOff, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TextField-without-border-radius\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"user-message\" // label=\"add a comment...\"\n            ,\n            variant: \"outlined\",\n            color: \"primary\",\n            multiline: true,\n            rowsMax: 3,\n            value: userMessage,\n            onChange: handleUserMessageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          disabled: userMessage.length > 0 ? false : true,\n          onClick: addUserComment,\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(SendRounded, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoSidebar, \"CCjg7WuyLdl+GsbUc7Fm0JYBU9E=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = VideoSidebar;\nexport default VideoSidebar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"VideoSidebar\");","map":{"version":3,"sources":["/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/VideoSidebar.js"],"names":["Avatar","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","List","ListItem","ListItemAvatar","ListItemText","makeStyles","Slide","TextField","Tooltip","Zoom","Favorite","FavoriteBorder","HighlightOff","Message","SendRounded","Share","React","useEffect","useState","db","Transition","forwardRef","props","ref","VideoSidebar","likes","messages","shares","videoId","userUid","userName","liked","setLiked","openMessages","setOpenMessages","userMessage","setUserMessage","useStyles","theme","paper","minWidth","root","width","maxWidth","backgroundColor","palette","background","inline","display","classes","handleClickOpenMessages","handleCloseMessages","handleUserMessageChange","event","target","value","collection","doc","onSnapshot","snapshot","docs","forEach","docUserId","data","userid","onLikeVideo","add","then","onDisLikeVideo","where","get","delete","addUserComment","clearUserMessage","length","map","username","message","match","join","toUpperCase"],"mappings":"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","sourcesContent":["import { Avatar, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Slide, TextField, Tooltip, Zoom } from '@material-ui/core';\nimport { Favorite, FavoriteBorder, HighlightOff, Message, SendRounded, Share } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { db } from './firebase'\nimport './VideoSidebar.css'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction VideoSidebar({ likes, messages, shares, videoId, userUid, userName }) {\n  const [liked, setLiked] = useState(false)\n  const [openMessages, setOpenMessages] = React.useState(false);\n  const [userMessage, setUserMessage] = React.useState('')\n\n  const useStyles = makeStyles((theme) => ({\n    paper: { minWidth: \"900px\" },\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n  }));\n\n  const classes = useStyles()\n\n  const handleClickOpenMessages = () => {\n    setOpenMessages(true);\n  };\n\n  const handleCloseMessages = () => {\n    setOpenMessages(false);\n  };\n\n  const handleUserMessageChange = (event) => {\n    setUserMessage(event.target.value);\n  };\n\n  useEffect(() => {\n    db.collection(\"videos\")\n      .doc(videoId)\n      .collection(\"likes\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n          let docUserId = doc.data().userid\n          if (docUserId === userUid) {\n            setLiked(true)\n          } else {\n            setLiked(false)\n          }\n        })\n      })\n\n  }, [videoId, userUid])\n\n  const onLikeVideo = () => {\n    db.collection(\"videos\")\n      .doc(videoId)\n      .collection(\"likes\").add({\n        \"userid\": userUid\n      }).then(() => {\n        setLiked(true)\n      })\n  }\n\n  const onDisLikeVideo = () => {\n    db.collection(\"videos\")\n      .doc(videoId)\n      .collection(\"likes\").where('userid', '==', userUid)\n      .get()\n      .then((docs) => {\n        docs.forEach((doc) => {\n          doc.ref.delete()\n        })\n      }).then(() => {\n        setLiked(false)\n      })\n  }\n\n  const addUserComment = () => {\n    db.collection(\"videos\")\n      .doc(videoId)\n      .collection(\"messages\")\n      .add({\n        'message': userMessage,\n        'username': userName\n      })\n  }\n\n  const clearUserMessage = () => {\n    setUserMessage('')\n  }\n\n  return (\n    <div className=\"videoSidebar\">\n      <div className=\"videoSidebar__buttons\">\n        {liked ? (\n          <Favorite fontSize=\"large\" onClick={onDisLikeVideo} />\n        ) : (\n            <FavoriteBorder fontSize=\"large\" onClick={onLikeVideo} />\n          )\n        }\n        <p>{likes}</p>\n      </div>\n\n      <div className=\"videoSidebar__buttons\" onClick={handleClickOpenMessages}>\n        <Message fontSize=\"large\" />\n        <p>{messages.length}</p>\n      </div>\n\n      <div className=\"videoSidebar__buttons\">\n        <Share fontSize=\"large\" />\n        <p>{shares}</p>\n      </div>\n\n      {/* messagesDialogBox */}\n      <Dialog\n        open={openMessages}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleCloseMessages}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        className=\"videoSidebar__messagesDialogBox\"\n        maxWidth=\"sm\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Messages</DialogTitle>\n        <DialogContent>\n          <List className={classes.root}>\n            {messages.map(({ username, message }) => (\n              <ListItem key={username + message} alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar >{username.match(/\\b(\\w)/g).join('').toUpperCase()}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={username}\n                  secondary={\n                    <React.Fragment>\n                      {message}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        </DialogContent>\n        <DialogActions id=\"alert-dialog-slide-title\" className=\"videoSidebar__userMessageBox\">\n          <Tooltip TransitionComponent={Zoom} arrow title=\"Delete\">\n            <span>\n              <IconButton disabled={userMessage.length > 0 ? false : true} onClick={clearUserMessage} color=\"primary\">\n                <HighlightOff fontSize=\"large\" />\n              </IconButton>\n            </span>\n          </Tooltip>\n          <div className=\"TextField-without-border-radius\">\n            <TextField\n              id=\"user-message\"\n              // label=\"add a comment...\"\n              variant=\"outlined\"\n              color=\"primary\"\n              multiline\n              rowsMax={3}\n              value={userMessage}\n              onChange={handleUserMessageChange}\n            />\n          </div>\n          <IconButton disabled={userMessage.length > 0 ? false : true} onClick={addUserComment} color=\"primary\">\n            <SendRounded fontSize=\"large\" />\n          </IconButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default VideoSidebar\n"]},"metadata":{},"sourceType":"module"}