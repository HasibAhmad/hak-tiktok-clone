{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/VideoSidebar.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, makeStyles, Slide } from '@material-ui/core';\nimport { Favorite, FavoriteBorder, Message, Share } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport './VideoSidebar.css';\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nfunction VideoSidebar({\n  likes,\n  messages,\n  shares,\n  videoId,\n  userUid,\n  userName\n}) {\n  _s();\n\n  const [liked, setLiked] = useState(false);\n  const [openMessages, setOpenMessages] = React.useState(false);\n  const useStyles = makeStyles(() => ({\n    paper: {\n      minWidth: \"900px\"\n    }\n  }));\n  const classes = useStyles();\n\n  const handleClickOpenMessages = () => {\n    setOpenMessages(true);\n  };\n\n  const handleCloseMessages = () => {\n    setOpenMessages(false);\n  };\n\n  useEffect(() => {\n    db.collection(\"videos\").doc(videoId).collection(\"likes\").onSnapshot(snapshot => {\n      snapshot.docs.forEach(doc => {\n        let docUserId = doc.data().userid;\n\n        if (docUserId === userUid) {\n          setLiked(true);\n        } else {\n          setLiked(false);\n        }\n      });\n    });\n  }, [videoId, userUid]);\n\n  const onLikeVideo = () => {\n    db.collection(\"videos\").doc(videoId).collection(\"likes\").add({\n      \"userid\": userUid\n    }).then(() => {\n      setLiked(true);\n    });\n  };\n\n  const onDisLikeVideo = () => {\n    db.collection(\"videos\").doc(videoId).collection(\"likes\").where('userid', '==', userUid).get().then(docs => {\n      docs.forEach(doc => {\n        doc.ref.delete();\n      });\n    }).then(() => {\n      setLiked(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoSidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoSidebar__buttons\",\n      children: [liked ? /*#__PURE__*/_jsxDEV(Favorite, {\n        fontSize: \"large\",\n        onClick: onDisLikeVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n        fontSize: \"large\",\n        onClick: onLikeVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoSidebar__buttons\",\n      onClick: handleClickOpenMessages,\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: messages.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoSidebar__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Share, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: shares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openMessages,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleCloseMessages,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      className: \"videoSidebar__messagesDialogBox\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: messages.map(({\n            username,\n            message\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [username, \": \\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseMessages,\n          variant: \"outlined\",\n          fontSize: \"small\",\n          color: \"primary\",\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoSidebar, \"QHtnRHqkwDulx/A1XOWMKhFqWe8=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = VideoSidebar;\nexport default VideoSidebar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"VideoSidebar\");","map":{"version":3,"sources":["/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/VideoSidebar.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","makeStyles","Slide","Favorite","FavoriteBorder","Message","Share","React","useEffect","useState","db","Transition","forwardRef","props","ref","VideoSidebar","likes","messages","shares","videoId","userUid","userName","liked","setLiked","openMessages","setOpenMessages","useStyles","paper","minWidth","classes","handleClickOpenMessages","handleCloseMessages","collection","doc","onSnapshot","snapshot","docs","forEach","docUserId","data","userid","onLikeVideo","add","then","onDisLikeVideo","where","get","delete","length","map","username","message"],"mappings":"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","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, makeStyles, Slide } from '@material-ui/core';\nimport { Favorite, FavoriteBorder, Message, Share } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { db } from './firebase'\nimport './VideoSidebar.css'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction VideoSidebar({ likes, messages, shares, videoId, userUid, userName }) {\n  const [liked, setLiked] = useState(false)\n  const [openMessages, setOpenMessages] = React.useState(false);\n\n  const useStyles = makeStyles(() => ({\n    paper: { minWidth: \"900px\" },\n  }));\n\n  const classes = useStyles()\n\n  const handleClickOpenMessages = () => {\n    setOpenMessages(true);\n  };\n\n  const handleCloseMessages = () => {\n    setOpenMessages(false);\n  };\n\n  useEffect(() => {\n    db.collection(\"videos\")\n      .doc(videoId)\n      .collection(\"likes\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n          let docUserId = doc.data().userid\n          if (docUserId === userUid) {\n            setLiked(true)\n          } else {\n            setLiked(false)\n          }\n        })\n      })\n    \n  }, [videoId, userUid])\n\n  const onLikeVideo = () => {\n    db.collection(\"videos\")\n        .doc(videoId)\n        .collection(\"likes\").add({\n          \"userid\": userUid\n        }).then(() => {\n          setLiked(true)\n        })\n  }\n\n  const onDisLikeVideo = () => {\n    db.collection(\"videos\")\n        .doc(videoId)\n        .collection(\"likes\").where('userid', '==', userUid)\n        .get()\n        .then((docs) => {\n          docs.forEach((doc) => {\n            doc.ref.delete()\n          })\n        }).then(() => {\n          setLiked(false)\n        })\n  }\n\n  return (\n    <div className=\"videoSidebar\">\n      <div className=\"videoSidebar__buttons\">\n        {liked ? (\n          <Favorite fontSize=\"large\" onClick={onDisLikeVideo} />\n        ) : (\n            <FavoriteBorder fontSize=\"large\" onClick={onLikeVideo} />\n          )\n        }\n        <p>{likes}</p>\n      </div>\n\n      <div className=\"videoSidebar__buttons\" onClick={handleClickOpenMessages}>\n        <Message fontSize=\"large\" />\n        <p>{messages.length}</p>\n      </div>\n\n      <div className=\"videoSidebar__buttons\">\n        <Share fontSize=\"large\" />\n        <p>{shares}</p>\n      </div>\n\n      {/* messagesDialogBox */}\n      <Dialog\n        open={openMessages}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleCloseMessages}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        className=\"videoSidebar__messagesDialogBox\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Messages</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {messages.map(({username, message}) => (\n              <>\n                <strong>{username}: &nbsp;</strong>\n                <p>{message}</p>\n              </>\n            ))}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseMessages} variant=\"outlined\" fontSize=\"small\" color=\"primary\">\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default VideoSidebar\n"]},"metadata":{},"sourceType":"module"}