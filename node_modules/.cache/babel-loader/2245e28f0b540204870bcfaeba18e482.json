{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/Video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { db } from './firebase';\nimport './Video.css';\nimport VideoFooter from './VideoFooter';\nimport VideoSidebar from './VideoSidebar';\n\nfunction Video({\n  videoId,\n  url,\n  channel,\n  description,\n  song,\n  messages,\n  shares,\n  onVideoPress,\n  playing,\n  user\n}) {\n  _s();\n\n  const videoRef = useRef(null);\n  const [likedUsers, setLikedUsers] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [usersMessages, setUsersMessages] = useState([]); // pause the video of scrolling\n\n  useEffect(() => {\n    if (!playing) {\n      videoRef.current.pause();\n    }\n  }, [playing]);\n  useEffect(() => {\n    console.log(window.location.href);\n\n    async function getLikedUsersSnapshot() {\n      const likedUsersSnapshot = await db.collection(\"videos\").doc(videoId).collection(\"likes\").get();\n      setLikedUsers(likedUsersSnapshot.docs.map(doc => doc.data().userid));\n      setLikes(likedUsers.length);\n    }\n\n    getLikedUsersSnapshot();\n  }, [videoId, likedUsers, likes]);\n  useEffect(() => {\n    async function getUsersMessagesSnapshot() {\n      const usersMessagesSnapshot = await db.collection(\"videos\").doc(videoId).collection(\"messages\").orderBy('timestamp', 'desc').get();\n      setUsersMessages(usersMessagesSnapshot.docs.map(doc => ({\n        'message': doc.data().message,\n        'username': doc.data().username\n      })));\n    }\n\n    getUsersMessagesSnapshot();\n  }, [videoId, usersMessages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video__player\",\n      src: url,\n      loop: true,\n      onClick: onVideoPress,\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoFooter, {\n      channel: channel,\n      description: description,\n      song: song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      likes: likes,\n      messages: usersMessages,\n      shares: shares,\n      videoId: videoId,\n      userUid: user.uid,\n      userName: user.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"ODJVixH/I2q/m+yzIt76xl/zN7U=\");\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/hasib/Desktop/ReactAPPS/hak-tiktok/src/Video.js"],"names":["React","useEffect","useRef","useState","db","VideoFooter","VideoSidebar","Video","videoId","url","channel","description","song","messages","shares","onVideoPress","playing","user","videoRef","likedUsers","setLikedUsers","likes","setLikes","usersMessages","setUsersMessages","current","pause","console","log","window","location","href","getLikedUsersSnapshot","likedUsersSnapshot","collection","doc","get","docs","map","data","userid","length","getUsersMessagesSnapshot","usersMessagesSnapshot","orderBy","message","username","uid","displayName"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { db } from './firebase';\nimport './Video.css'\nimport VideoFooter from './VideoFooter';\nimport VideoSidebar from './VideoSidebar';\n\nfunction Video({ videoId, url, channel, description, song, messages, shares, onVideoPress, playing, user }) {\n  const videoRef = useRef(null);\n  const [likedUsers, setLikedUsers] = useState([])\n  const [likes, setLikes] = useState(0)\n  const [usersMessages, setUsersMessages] = useState([])\n\n  // pause the video of scrolling\n  useEffect(() => {\n    if (!playing) {\n      videoRef.current.pause()\n    }\n  }, [playing])\n\n  useEffect(() => {console.log(window.location.href);\n    async function getLikedUsersSnapshot () {\n     const likedUsersSnapshot = await db\n                                        .collection(\"videos\")\n                                        .doc(videoId)\n                                        .collection(\"likes\").get()\n      setLikedUsers(likedUsersSnapshot.docs.map(doc => doc.data().userid))\n      setLikes(likedUsers.length)\n    }\n    getLikedUsersSnapshot()\n  }, [videoId, likedUsers, likes])\n\n  useEffect(() => {\n    async function getUsersMessagesSnapshot () {\n     const usersMessagesSnapshot = await db\n                                        .collection(\"videos\")\n                                        .doc(videoId)\n                                        .collection(\"messages\").orderBy('timestamp', 'desc').get()\n      setUsersMessages(usersMessagesSnapshot.docs.map((doc) => ({'message': doc.data().message, 'username': doc.data().username})))\n    }\n    getUsersMessagesSnapshot()\n  }, [videoId, usersMessages])\n\n  return (\n    <div className=\"video\">\n      <video\n        className=\"video__player\"\n        src={url}\n        loop\n        onClick={onVideoPress}\n        ref={videoRef}\n      >\n      </video>\n\n      <VideoFooter\n        channel={channel}\n        description={description}\n        song={song}\n      />\n\n      <VideoSidebar\n        likes={likes}\n        messages={usersMessages}\n        shares={shares}\n        videoId={videoId}\n        userUid={user.uid}\n        userName={user.displayName}\n      />\n    </div>\n  )\n}\n\nexport default Video\n"]},"metadata":{},"sourceType":"module"}